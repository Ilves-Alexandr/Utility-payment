{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\San\\\\Desktop\\\\projects\\\\testTest \\u2014 \\u043A\\u043E\\u043F\\u0438\\u044F\\\\client\\\\src\\\\components\\\\EditTransaction.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { useParams } from 'react-router-dom';\n\nimport React from 'react';\nimport axios from 'axios';\n\n// function TransactionItem({ transaction, onDelete }) {\n//   const handleDelete = async () => {\n//     try {\n//       console.log('Transaction ID:', transaction._id);\n//       await axios.delete(`/api/transaction/${transaction._id}`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       alert('Транзакция удалена');\n//       onDelete(); // Вызов обновления списка транзакций\n//     } catch (error) {\n//       console.error('Ошибка при удалении транзакции:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <button onClick={handleDelete}>Удалить</button>\n//     </div>\n//   );\n// }\n\n// export default TransactionItem;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditTransaction() {\n  _s();\n  const {\n    id\n  } = useParams(); // Получаем ID транзакции из параметров URL\n  const [transaction, setTransaction] = useState(null);\n  const [error, setError] = useState(null);\n  console.log(id);\n  console.dir(id);\n  useEffect(() => {\n    const fetchTransaction = async () => {\n      try {\n        const token = localStorage.getItem('token'); // Получаем токен авторизации\n        console.log(token);\n        if (!token) {\n          setError('Отсутствует токен авторизации');\n          return;\n        }\n\n        // Проверяем, есть ли ID и выводим его для проверки\n        if (!id) {\n          setError('ID транзакции отсутствует');\n          console.error('ID транзакции отсутствует');\n          return;\n        }\n        const config = {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        };\n        const response = await axios.get(`/api/transaction/${id}`, config); // Запрос к серверу по ID транзакции\n        setTransaction(response.data);\n      } catch (error) {\n        console.error('Ошибка при загрузке транзакции:', error);\n        setError('Ошибка при загрузке транзакции');\n      }\n    };\n    fetchTransaction();\n  }, [id]); // Используем ID как зависимость для useEffect\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 12\n    }, this);\n  }\n  if (!transaction) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0442\\u0440\\u0430\\u043D\\u0437\\u0430\\u043A\\u0446\\u0438\\u044E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u0421\\u0443\\u043C\\u043C\\u0430 \\u0441\\u0447\\u0435\\u0442\\u0430: \", transaction.amountBilled]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u041E\\u043F\\u043B\\u0430\\u0447\\u0435\\u043D\\u043E: \", transaction.amountPaid]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(EditTransaction, \"GCpswOJ/rEZKq+Druou00N3wLGU=\", true);\n_c = EditTransaction;\nexport default EditTransaction;\n\n// import React from 'react';\n// import axios from 'axios';\n\n// function TransactionItem({ transaction, onDelete }) {\n//   const handleDelete = async () => {\n//     try {\n//       console.log('Transaction ID:', transaction._id);\n//       await axios.delete(`/api/transaction/${transaction._id}`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       alert('Транзакция удалена');\n//       onDelete(); // Вызов обновления списка транзакций\n//     } catch (error) {\n//       console.error('Ошибка при удалении транзакции:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <button onClick={handleDelete}>Удалить</button>\n//     </div>\n//   );\n// }\n\n// export default TransactionItem;\nvar _c;\n$RefreshReg$(_c, \"EditTransaction\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","EditTransaction","_s","id","useParams","transaction","setTransaction","useState","error","setError","console","log","dir","useEffect","fetchTransaction","token","localStorage","getItem","config","headers","Authorization","response","get","data","children","fileName","_jsxFileName","lineNumber","columnNumber","amountBilled","amountPaid","_c","$RefreshReg$"],"sources":["C:/Users/San/Desktop/projects/testTest — копия/client/src/components/EditTransaction.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n// import { useParams } from 'react-router-dom';\r\n\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\n// function TransactionItem({ transaction, onDelete }) {\r\n//   const handleDelete = async () => {\r\n//     try {\r\n//       console.log('Transaction ID:', transaction._id);\r\n//       await axios.delete(`/api/transaction/${transaction._id}`, {\r\n//         headers: {\r\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n//         },\r\n//       });\r\n//       alert('Транзакция удалена');\r\n//       onDelete(); // Вызов обновления списка транзакций\r\n//     } catch (error) {\r\n//       console.error('Ошибка при удалении транзакции:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <button onClick={handleDelete}>Удалить</button>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default TransactionItem;\r\nfunction EditTransaction() {\r\n  const { id } = useParams(); // Получаем ID транзакции из параметров URL\r\n  const [transaction, setTransaction] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  console.log(id);\r\n  console.dir(id)\r\n  \r\n\r\n  useEffect(() => {\r\n    const fetchTransaction = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token'); // Получаем токен авторизации\r\nconsole.log(token);\r\n\r\n        if (!token) {\r\n          setError('Отсутствует токен авторизации');\r\n          return;\r\n        }\r\n\r\n        // Проверяем, есть ли ID и выводим его для проверки\r\n        if (!id) {\r\n          setError('ID транзакции отсутствует');\r\n          console.error('ID транзакции отсутствует');\r\n          return;\r\n        }\r\n\r\n        const config = {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        };\r\n\r\n        const response = await axios.get(`/api/transaction/${id}`, config); // Запрос к серверу по ID транзакции\r\n        setTransaction(response.data);\r\n      } catch (error) {\r\n        console.error('Ошибка при загрузке транзакции:', error);\r\n        setError('Ошибка при загрузке транзакции');\r\n      }\r\n    };\r\n\r\n    fetchTransaction();\r\n  }, [id]); // Используем ID как зависимость для useEffect\r\n\r\n  if (error) {\r\n    return <p>{error}</p>;\r\n  }\r\n\r\n  if (!transaction) {\r\n    return <p>Загрузка...</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Редактировать транзакцию</h2>\r\n      <p>Сумма счета: {transaction.amountBilled}</p>\r\n      <p>Оплачено: {transaction.amountPaid}</p>\r\n      {/* Добавьте здесь форму для редактирования */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditTransaction;\r\n\r\n\r\n// import React from 'react';\r\n// import axios from 'axios';\r\n\r\n// function TransactionItem({ transaction, onDelete }) {\r\n//   const handleDelete = async () => {\r\n//     try {\r\n//       console.log('Transaction ID:', transaction._id);\r\n//       await axios.delete(`/api/transaction/${transaction._id}`, {\r\n//         headers: {\r\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n//         },\r\n//       });\r\n//       alert('Транзакция удалена');\r\n//       onDelete(); // Вызов обновления списка транзакций\r\n//     } catch (error) {\r\n//       console.error('Ошибка при удалении транзакции:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <button onClick={handleDelete}>Удалить</button>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default TransactionItem;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}