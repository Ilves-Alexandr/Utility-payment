{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\San\\\\Desktop\\\\projects\\\\test\\\\client\\\\src\\\\components\\\\PostForm.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const PostForm = () => {\n//   const [title, setTitle] = useState('');\n//   const [content, setContent] = useState('');\n//   const [error, setError] = useState('');\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const token = localStorage.getItem('token');\n//     try {\n//       await axios.post('http://localhost:5000/api/posts', { title, content }, {\n//         headers: { Authorization: `Bearer ${token}` }\n//       });\n//       setTitle('');\n//       setContent('');\n//     } catch (err) {\n//       setError(err.response ? err.response.data.msg : 'Something went wrong');\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <h2>Create Post</h2>\n//       {error && <p>{error}</p>}\n//       <div>\n//         <label>Title</label>\n//         <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} />\n//       </div>\n//       <div>\n//         <label>Content</label>\n//         <textarea value={content} onChange={(e) => setContent(e.target.value)} />\n//       </div>\n//       <button type=\"submit\">Add Post</button>\n//     </form>\n//   );\n// };\n\n// export default PostForm;\n\n// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // \n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useNavigate, useParams } from 'react-router-dom';\n// // debugger\n// const PostForm = () => {\n//   const [title, setTitle] = useState('');\n//   const [content, setContent] = useState('');\n//   const { id } = useParams(); // Получение ID из URL\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     if (id) {\n//       const fetchPost = async () => {\n//         try {\n//           const res = await axios.get(`http://localhost:5000/api/posts/${id}`,{\n//             headers: {\n//               Authorization: `Bearer ${localStorage.getItem('token')}`,\n//             },\n//           });\n//           setTitle(res.data.title);\n//           setContent(res.data.content);\n//         } catch (err) {\n//           console.error('Error fetching post:', err);\n//         }\n//       };\n\n//       fetchPost();\n//     }\n//   }, [id]);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const postData = { title, content };\n\n//     try {\n//       if (id) {\n//         // Обновление поста\n//         await axios.put(`http://localhost:5000/api/posts/${id}`, postData, {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem('token')}`,\n//           },\n//         });\n//       } else {\n//         // Создание нового поста\n//         await axios.post('http://localhost:5000/api/posts', postData, {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem('token')}`,\n//           },\n//         });\n//       }\n\n//       navigate('/posts');\n//     } catch (err) {\n//       console.error('Error saving post:', err);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>{id ? 'Edit Post' : 'Create Post'}</h1>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label>Title</label>\n//           <input\n//             type=\"text\"\n//             value={title}\n//             onChange={(e) => setTitle(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Content</label>\n//           <textarea\n//             value={content}\n//             onChange={(e) => setContent(e.target.value)}\n//             required\n//           ></textarea>\n//         </div>\n//         <button type=\"submit\">{id ? 'Update' : 'Create'}</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default PostForm;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostForm = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const {\n    id\n  } = useParams(); // Получение ID из URL\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (id) {\n      const fetchPost = async () => {\n        try {\n          const res = await axios.get(`http://localhost:5000/api/posts/${id}`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`\n            }\n          });\n          setTitle(res.data.title);\n          setContent(res.data.content);\n        } catch (err) {\n          console.error('Error fetching post:', err);\n        }\n      };\n      fetchPost();\n    }\n  }, [id]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const postData = {\n      title,\n      content\n    };\n    try {\n      if (id) {\n        // Обновление поста\n        await axios.put(`http://localhost:5000/api/posts/${id}`, postData, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n      } else {\n        // Создание нового поста\n        await axios.post('http://localhost:5000/api/posts', postData, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n      }\n      navigate('/posts');\n    } catch (err) {\n      console.error('Error saving post:', err);\n      alert('Failed to save the post. Please check the console for more details.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: id ? 'Edit Post' : 'Create Post'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: content,\n          onChange: e => setContent(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: id ? 'Update' : 'Create'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n};\n_s(PostForm, \"lD42VhaT6cLUSQ1MynMo5wc9GTI=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","useParams","jsxDEV","_jsxDEV","PostForm","_s","title","setTitle","content","setContent","id","navigate","fetchPost","res","get","headers","Authorization","localStorage","getItem","data","err","console","error","handleSubmit","e","preventDefault","postData","put","post","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/San/Desktop/projects/test/client/src/components/PostForm.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const PostForm = () => {\r\n//   const [title, setTitle] = useState('');\r\n//   const [content, setContent] = useState('');\r\n//   const [error, setError] = useState('');\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const token = localStorage.getItem('token');\r\n//     try {\r\n//       await axios.post('http://localhost:5000/api/posts', { title, content }, {\r\n//         headers: { Authorization: `Bearer ${token}` }\r\n//       });\r\n//       setTitle('');\r\n//       setContent('');\r\n//     } catch (err) {\r\n//       setError(err.response ? err.response.data.msg : 'Something went wrong');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleSubmit}>\r\n//       <h2>Create Post</h2>\r\n//       {error && <p>{error}</p>}\r\n//       <div>\r\n//         <label>Title</label>\r\n//         <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n//       </div>\r\n//       <div>\r\n//         <label>Content</label>\r\n//         <textarea value={content} onChange={(e) => setContent(e.target.value)} />\r\n//       </div>\r\n//       <button type=\"submit\">Add Post</button>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default PostForm;\r\n\r\n// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // \r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { useNavigate, useParams } from 'react-router-dom';\r\n// // debugger\r\n// const PostForm = () => {\r\n//   const [title, setTitle] = useState('');\r\n//   const [content, setContent] = useState('');\r\n//   const { id } = useParams(); // Получение ID из URL\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     if (id) {\r\n//       const fetchPost = async () => {\r\n//         try {\r\n//           const res = await axios.get(`http://localhost:5000/api/posts/${id}`,{\r\n//             headers: {\r\n//               Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n//             },\r\n//           });\r\n//           setTitle(res.data.title);\r\n//           setContent(res.data.content);\r\n//         } catch (err) {\r\n//           console.error('Error fetching post:', err);\r\n//         }\r\n//       };\r\n\r\n//       fetchPost();\r\n//     }\r\n//   }, [id]);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const postData = { title, content };\r\n\r\n//     try {\r\n//       if (id) {\r\n//         // Обновление поста\r\n//         await axios.put(`http://localhost:5000/api/posts/${id}`, postData, {\r\n//           headers: {\r\n//             Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n//           },\r\n//         });\r\n//       } else {\r\n//         // Создание нового поста\r\n//         await axios.post('http://localhost:5000/api/posts', postData, {\r\n//           headers: {\r\n//             Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n//           },\r\n//         });\r\n//       }\r\n\r\n//       navigate('/posts');\r\n//     } catch (err) {\r\n//       console.error('Error saving post:', err);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>{id ? 'Edit Post' : 'Create Post'}</h1>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <label>Title</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={title}\r\n//             onChange={(e) => setTitle(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <label>Content</label>\r\n//           <textarea\r\n//             value={content}\r\n//             onChange={(e) => setContent(e.target.value)}\r\n//             required\r\n//           ></textarea>\r\n//         </div>\r\n//         <button type=\"submit\">{id ? 'Update' : 'Create'}</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default PostForm;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nconst PostForm = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const { id } = useParams(); // Получение ID из URL\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      const fetchPost = async () => {\r\n        try {\r\n          const res = await axios.get(`http://localhost:5000/api/posts/${id}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n            },\r\n          });\r\n          setTitle(res.data.title);\r\n          setContent(res.data.content);\r\n        } catch (err) {\r\n          console.error('Error fetching post:', err);\r\n        }\r\n      };\r\n\r\n      fetchPost();\r\n    }\r\n  }, [id]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const postData = { title, content };\r\n\r\n    try {\r\n      if (id) {\r\n        // Обновление поста\r\n        await axios.put(`http://localhost:5000/api/posts/${id}`, postData, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n      } else {\r\n        // Создание нового поста\r\n        await axios.post('http://localhost:5000/api/posts', postData, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n      }\r\n\r\n      navigate('/posts');\r\n    } catch (err) {\r\n      console.error('Error saving post:', err);\r\n      alert('Failed to save the post. Please check the console for more details.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>{id ? 'Edit Post' : 'Create Post'}</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Content</label>\r\n          <textarea\r\n            value={content}\r\n            onChange={(e) => setContent(e.target.value)}\r\n            required\r\n          ></textarea>\r\n        </div>\r\n        <button type=\"submit\">{id ? 'Update' : 'Create'}</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}