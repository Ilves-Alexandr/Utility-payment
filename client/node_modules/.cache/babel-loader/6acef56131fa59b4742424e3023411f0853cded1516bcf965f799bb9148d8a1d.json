{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{TextField,Button,Box,Typography}from'@mui/material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_URL=process.env.REACT_APP_API_URL||\"http://localhost:5000\";function EditTgk(_ref){let{transactionId,onUpdate}=_ref;const[transaction,setTransaction]=useState(null);const[error,setError]=useState('');const[updatedTransaction,setUpdatedTransaction]=useState({});useEffect(()=>{const fetchTransaction=async()=>{try{const token=localStorage.getItem('token');const config={headers:{Authorization:`Bearer ${token}`}};console.log(\"Fetching transaction with ID:\",transactionId);// Логирование ID\nconst response=await axios.get(`${API_URL}/api/tgk/${transactionId}`,config);setTransaction(response.data);setUpdatedTransaction(response.data);// Инициализируем данные для редактирования\n}catch(error){console.error('Ошибка при загрузке транзакции:',error);setError('Ошибка при загрузке транзакции');}};if(transactionId){fetchTransaction();}else{setError('ID транзакции отсутствует');}},[transactionId]);const handleChange=e=>{const{name,value}=e.target;setUpdatedTransaction(prev=>({...prev,[name]:value}));// Обновляем данные для редактирования\n};const handleSubmit=async e=>{e.preventDefault();// Предотвращаем перезагрузку страницы\ntry{const token=localStorage.getItem('token');const config={headers:{Authorization:`Bearer ${token}`}};await axios.put(`${API_URL}/api/tgk/${transactionId}`,updatedTransaction,config);onUpdate();// Обновляем родительский компонент\n}catch(error){console.error('Ошибка при обновлении транзакции:',error);setError('Ошибка при обновлении транзакции');}};if(error){return/*#__PURE__*/_jsx(Typography,{color:\"error\",children:error});}if(!transaction){return/*#__PURE__*/_jsx(Typography,{children:\"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"});}return/*#__PURE__*/_jsxs(Box,{sx:{maxWidth:400,margin:'0 auto',padding:3,boxShadow:2,borderRadius:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0442\\u0440\\u0430\\u043D\\u0437\\u0430\\u043A\\u0446\\u0438\\u044E\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(Box,{mb:2,children:/*#__PURE__*/_jsx(TextField,{label:\"\\u0421\\u0443\\u043C\\u043C\\u0430 \\u0441\\u0447\\u0435\\u0442\\u0430\",type:\"number\",name:\"amountBilled\",fullWidth:true,value:updatedTransaction.amountBilled||'',onChange:handleChange,required:true})}),/*#__PURE__*/_jsx(Box,{mb:2,children:/*#__PURE__*/_jsx(TextField,{label:\"\\u041E\\u043F\\u043B\\u0430\\u0447\\u0435\\u043D\\u043E\",type:\"number\",name:\"amountPaid\",fullWidth:true,value:updatedTransaction.amountPaid||'',onChange:handleChange,required:true})}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",type:\"submit\",fullWidth:true,children:\"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F\"})]})]});}export default EditTgk;","map":{"version":3,"names":["React","useState","useEffect","axios","TextField","Button","Box","Typography","jsx","_jsx","jsxs","_jsxs","API_URL","process","env","REACT_APP_API_URL","EditTgk","_ref","transactionId","onUpdate","transaction","setTransaction","error","setError","updatedTransaction","setUpdatedTransaction","fetchTransaction","token","localStorage","getItem","config","headers","Authorization","console","log","response","get","data","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","put","color","children","sx","maxWidth","margin","padding","boxShadow","borderRadius","variant","gutterBottom","onSubmit","mb","label","type","fullWidth","amountBilled","onChange","required","amountPaid"],"sources":["C:/Users/San/Desktop/projects/testTest — копия/client/src/components/EditTgk.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { TextField, Button, Box, Typography } from '@mui/material';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\r\n\r\nfunction EditTgk({ transactionId, onUpdate }) {\r\n    const [transaction, setTransaction] = useState(null);\r\n    const [error, setError] = useState('');\r\n    const [updatedTransaction, setUpdatedTransaction] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchTransaction = async () => {\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n\r\n                const config = {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                };\r\n\r\n                console.log(\"Fetching transaction with ID:\", transactionId); // Логирование ID\r\n                const response = await axios.get(`${API_URL}/api/tgk/${transactionId}`, config);\r\n                setTransaction(response.data);\r\n                setUpdatedTransaction(response.data); // Инициализируем данные для редактирования\r\n            } catch (error) {\r\n                console.error('Ошибка при загрузке транзакции:', error);\r\n                setError('Ошибка при загрузке транзакции');\r\n            }\r\n        };\r\n\r\n        if (transactionId) {\r\n            fetchTransaction();\r\n        } else {\r\n            setError('ID транзакции отсутствует');\r\n        }\r\n    }, [transactionId]);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setUpdatedTransaction((prev) => ({ ...prev, [name]: value })); // Обновляем данные для редактирования\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); // Предотвращаем перезагрузку страницы\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n\r\n            const config = {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            };\r\n\r\n            await axios.put(`${API_URL}/api/tgk/${transactionId}`, updatedTransaction, config);\r\n            onUpdate(); // Обновляем родительский компонент\r\n        } catch (error) {\r\n            console.error('Ошибка при обновлении транзакции:', error);\r\n            setError('Ошибка при обновлении транзакции');\r\n        }\r\n    };\r\n\r\n    if (error) {\r\n        return <Typography color=\"error\">{error}</Typography>;\r\n    }\r\n\r\n    if (!transaction) {\r\n        return <Typography>Загрузка...</Typography>;\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ maxWidth: 400, margin: '0 auto', padding: 3, boxShadow: 2, borderRadius: 2 }}>\r\n            <Typography variant=\"h5\" gutterBottom>Редактировать транзакцию</Typography>\r\n            <form onSubmit={handleSubmit}>\r\n                <Box mb={2}>\r\n                    <TextField\r\n                        label=\"Сумма счета\"\r\n                        type=\"number\"\r\n                        name=\"amountBilled\"\r\n                        fullWidth\r\n                        value={updatedTransaction.amountBilled || ''}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </Box>\r\n                <Box mb={2}>\r\n                    <TextField\r\n                        label=\"Оплачено\"\r\n                        type=\"number\"\r\n                        name=\"amountPaid\"\r\n                        fullWidth\r\n                        value={updatedTransaction.amountPaid || ''}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </Box>\r\n                {/* Добавьте другие поля формы по мере необходимости */}\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\" fullWidth>\r\n                    Сохранить изменения\r\n                </Button>\r\n            </form>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default EditTgk;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,SAAS,CAAEC,MAAM,CAAEC,GAAG,CAAEC,UAAU,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnE,KAAM,CAAAC,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,uBAAuB,CAExE,QAAS,CAAAC,OAAOA,CAAAC,IAAA,CAA8B,IAA7B,CAAEC,aAAa,CAAEC,QAAS,CAAC,CAAAF,IAAA,CACxC,KAAM,CAACG,WAAW,CAAEC,cAAc,CAAC,CAAGpB,QAAQ,CAAC,IAAI,CAAC,CACpD,KAAM,CAACqB,KAAK,CAAEC,QAAQ,CAAC,CAAGtB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACuB,kBAAkB,CAAEC,qBAAqB,CAAC,CAAGxB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAEhEC,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAwB,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACA,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAE3C,KAAM,CAAAC,MAAM,CAAG,CACXC,OAAO,CAAE,CACLC,aAAa,CAAE,UAAUL,KAAK,EAClC,CACJ,CAAC,CAEDM,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAEhB,aAAa,CAAC,CAAE;AAC7D,KAAM,CAAAiB,QAAQ,CAAG,KAAM,CAAAhC,KAAK,CAACiC,GAAG,CAAC,GAAGxB,OAAO,YAAYM,aAAa,EAAE,CAAEY,MAAM,CAAC,CAC/ET,cAAc,CAACc,QAAQ,CAACE,IAAI,CAAC,CAC7BZ,qBAAqB,CAACU,QAAQ,CAACE,IAAI,CAAC,CAAE;AAC1C,CAAE,MAAOf,KAAK,CAAE,CACZW,OAAO,CAACX,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAAC,CACvDC,QAAQ,CAAC,gCAAgC,CAAC,CAC9C,CACJ,CAAC,CAED,GAAIL,aAAa,CAAE,CACfQ,gBAAgB,CAAC,CAAC,CACtB,CAAC,IAAM,CACHH,QAAQ,CAAC,2BAA2B,CAAC,CACzC,CACJ,CAAC,CAAE,CAACL,aAAa,CAAC,CAAC,CAEnB,KAAM,CAAAoB,YAAY,CAAIC,CAAC,EAAK,CACxB,KAAM,CAAEC,IAAI,CAAEC,KAAM,CAAC,CAAGF,CAAC,CAACG,MAAM,CAChCjB,qBAAqB,CAAEkB,IAAI,GAAM,CAAE,GAAGA,IAAI,CAAE,CAACH,IAAI,EAAGC,KAAM,CAAC,CAAC,CAAC,CAAE;AACnE,CAAC,CAED,KAAM,CAAAG,YAAY,CAAG,KAAO,CAAAL,CAAC,EAAK,CAC9BA,CAAC,CAACM,cAAc,CAAC,CAAC,CAAE;AACpB,GAAI,CACA,KAAM,CAAAlB,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAE3C,KAAM,CAAAC,MAAM,CAAG,CACXC,OAAO,CAAE,CACLC,aAAa,CAAE,UAAUL,KAAK,EAClC,CACJ,CAAC,CAED,KAAM,CAAAxB,KAAK,CAAC2C,GAAG,CAAC,GAAGlC,OAAO,YAAYM,aAAa,EAAE,CAAEM,kBAAkB,CAAEM,MAAM,CAAC,CAClFX,QAAQ,CAAC,CAAC,CAAE;AAChB,CAAE,MAAOG,KAAK,CAAE,CACZW,OAAO,CAACX,KAAK,CAAC,mCAAmC,CAAEA,KAAK,CAAC,CACzDC,QAAQ,CAAC,kCAAkC,CAAC,CAChD,CACJ,CAAC,CAED,GAAID,KAAK,CAAE,CACP,mBAAOb,IAAA,CAACF,UAAU,EAACwC,KAAK,CAAC,OAAO,CAAAC,QAAA,CAAE1B,KAAK,CAAa,CAAC,CACzD,CAEA,GAAI,CAACF,WAAW,CAAE,CACd,mBAAOX,IAAA,CAACF,UAAU,EAAAyC,QAAA,CAAC,qDAAW,CAAY,CAAC,CAC/C,CAEA,mBACIrC,KAAA,CAACL,GAAG,EAAC2C,EAAE,CAAE,CAAEC,QAAQ,CAAE,GAAG,CAAEC,MAAM,CAAE,QAAQ,CAAEC,OAAO,CAAE,CAAC,CAAEC,SAAS,CAAE,CAAC,CAAEC,YAAY,CAAE,CAAE,CAAE,CAAAN,QAAA,eACpFvC,IAAA,CAACF,UAAU,EAACgD,OAAO,CAAC,IAAI,CAACC,YAAY,MAAAR,QAAA,CAAC,6IAAwB,CAAY,CAAC,cAC3ErC,KAAA,SAAM8C,QAAQ,CAAEb,YAAa,CAAAI,QAAA,eACzBvC,IAAA,CAACH,GAAG,EAACoD,EAAE,CAAE,CAAE,CAAAV,QAAA,cACPvC,IAAA,CAACL,SAAS,EACNuD,KAAK,CAAC,+DAAa,CACnBC,IAAI,CAAC,QAAQ,CACbpB,IAAI,CAAC,cAAc,CACnBqB,SAAS,MACTpB,KAAK,CAAEjB,kBAAkB,CAACsC,YAAY,EAAI,EAAG,CAC7CC,QAAQ,CAAEzB,YAAa,CACvB0B,QAAQ,MACX,CAAC,CACD,CAAC,cACNvD,IAAA,CAACH,GAAG,EAACoD,EAAE,CAAE,CAAE,CAAAV,QAAA,cACPvC,IAAA,CAACL,SAAS,EACNuD,KAAK,CAAC,kDAAU,CAChBC,IAAI,CAAC,QAAQ,CACbpB,IAAI,CAAC,YAAY,CACjBqB,SAAS,MACTpB,KAAK,CAAEjB,kBAAkB,CAACyC,UAAU,EAAI,EAAG,CAC3CF,QAAQ,CAAEzB,YAAa,CACvB0B,QAAQ,MACX,CAAC,CACD,CAAC,cAENvD,IAAA,CAACJ,MAAM,EAACkD,OAAO,CAAC,WAAW,CAACR,KAAK,CAAC,SAAS,CAACa,IAAI,CAAC,QAAQ,CAACC,SAAS,MAAAb,QAAA,CAAC,+GAEpE,CAAQ,CAAC,EACP,CAAC,EACN,CAAC,CAEd,CAEA,cAAe,CAAAhC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}