{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\San\\\\Desktop\\\\projects\\\\testTest \\u2014 \\u043A\\u043E\\u043F\\u0438\\u044F\\\\client\\\\src\\\\components\\\\PostForm.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useNavigate, useParams } from 'react-router-dom';\n\n// const PostForm = () => {\n//   const [title, setTitle] = useState('');\n//   const [content, setContent] = useState('');\n//   const [error, setError] = useState('');\n//   const { id } = useParams(); // Получение ID из URL\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     if (id) {\n//       const fetchPost = async () => {\n//         try {\n//           const res = await axios.get(`http://localhost:5000/api/posts/${id}`, {\n//             headers: {\n//               Authorization: `Bearer ${localStorage.getItem('token')}`,\n//             },\n//           });\n//           setTitle(res.data.title);\n//           setContent(res.data.content);\n//         } catch (err) {\n//           console.error('Error fetching post:', err);\n//           setError(err.response ? err.response.data.msg : 'Something went wrong'); // Сохраняем сообщение об ошибке в состоянии\n//         }\n//       };\n\n//       fetchPost();\n//     }\n//   }, [id]);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const postData = { title, content };\n\n//     try {\n//       if (id) {\n//         // Обновление поста\n//         await axios.put(`http://localhost:5000/api/posts/${id}`, postData, {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem('token')}`,\n//           },\n//         });\n//       } else {\n//         // Создание нового поста\n//         await axios.post('http://localhost:5000/api/posts', postData, {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem('token')}`,\n//           },\n//         });\n//       }\n\n//       navigate('/posts');\n//     } catch (err) {\n//       console.error('Error saving post:', err);\n//       alert('Failed to save the post. Please check the console for more details.');\n//       setError(err.response ? err.response.data.msg : 'Something went wrong'); // Сохраняем сообщение об ошибке в состоянии\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>{id ? 'Edit Post' : 'Create Post'}</h1>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label>Title</label>\n//           <input\n//             type=\"text\"\n//             value={title}\n//             onChange={(e) => setTitle(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Content</label>\n//           <textarea\n//             value={content}\n//             onChange={(e) => setContent(e.target.value)}\n//             required\n//           ></textarea>\n//         </div>\n//         <button type=\"submit\">{id ? 'Update' : 'Create'}</button>\n//       </form>\n//       {error && <p style={{ color: 'red' }}>{error}</p>} {/* Отображение сообщения об ошибке */}\n//     </div>\n//   );\n// };\n\n// export default PostForm;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Box, Button, TextField, Typography, Alert } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostForm = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [error, setError] = useState('');\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (id) {\n      const fetchPost = async () => {\n        try {\n          const res = await axios.get(`http://localhost:5000/api/posts/${id}`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`\n            }\n          });\n          setTitle(res.data.title);\n          setContent(res.data.content);\n        } catch (err) {\n          console.error('Error fetching post:', err);\n          setError(err.response ? err.response.data.msg : 'Something went wrong');\n        }\n      };\n      fetchPost();\n    }\n  }, [id]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const postData = {\n      title,\n      content\n    };\n    try {\n      if (id) {\n        // Обновление поста\n        await axios.put(`http://localhost:5000/api/posts/${id}`, postData, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n      } else {\n        // Создание нового поста\n        await axios.post('http://localhost:5000/api/posts', postData, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n      }\n      navigate('/posts');\n    } catch (err) {\n      console.error('Error saving post:', err);\n      setError(err.response ? err.response.data.msg : 'Something went wrong');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: 600,\n      margin: 'auto',\n      padding: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: id ? 'Edit Post' : 'Create Post'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        marginBottom: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Title\",\n        variant: \"outlined\",\n        fullWidth: true,\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true,\n        sx: {\n          marginBottom: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Content\",\n        variant: \"outlined\",\n        fullWidth: true,\n        multiline: true,\n        rows: 4,\n        value: content,\n        onChange: e => setContent(e.target.value),\n        required: true,\n        sx: {\n          marginBottom: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: id ? 'Update' : 'Create'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(PostForm, \"pvYTJFneRX6fbKqcgg8XiGJ8N9s=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","useParams","Box","Button","TextField","Typography","Alert","jsxDEV","_jsxDEV","PostForm","_s","title","setTitle","content","setContent","error","setError","id","navigate","fetchPost","res","get","headers","Authorization","localStorage","getItem","data","err","console","response","msg","handleSubmit","e","preventDefault","postData","put","post","sx","maxWidth","margin","padding","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","severity","marginBottom","onSubmit","label","fullWidth","value","onChange","target","required","multiline","rows","type","color","_c","$RefreshReg$"],"sources":["C:/Users/San/Desktop/projects/testTest — копия/client/src/components/PostForm.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { useNavigate, useParams } from 'react-router-dom';\r\n\r\n// const PostForm = () => {\r\n//   const [title, setTitle] = useState('');\r\n//   const [content, setContent] = useState('');\r\n//   const [error, setError] = useState('');\r\n//   const { id } = useParams(); // Получение ID из URL\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     if (id) {\r\n//       const fetchPost = async () => {\r\n//         try {\r\n//           const res = await axios.get(`http://localhost:5000/api/posts/${id}`, {\r\n//             headers: {\r\n//               Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n//             },\r\n//           });\r\n//           setTitle(res.data.title);\r\n//           setContent(res.data.content);\r\n//         } catch (err) {\r\n//           console.error('Error fetching post:', err);\r\n//           setError(err.response ? err.response.data.msg : 'Something went wrong'); // Сохраняем сообщение об ошибке в состоянии\r\n//         }\r\n//       };\r\n\r\n//       fetchPost();\r\n//     }\r\n//   }, [id]);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const postData = { title, content };\r\n\r\n//     try {\r\n//       if (id) {\r\n//         // Обновление поста\r\n//         await axios.put(`http://localhost:5000/api/posts/${id}`, postData, {\r\n//           headers: {\r\n//             Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n//           },\r\n//         });\r\n//       } else {\r\n//         // Создание нового поста\r\n//         await axios.post('http://localhost:5000/api/posts', postData, {\r\n//           headers: {\r\n//             Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n//           },\r\n//         });\r\n//       }\r\n\r\n//       navigate('/posts');\r\n//     } catch (err) {\r\n//       console.error('Error saving post:', err);\r\n//       alert('Failed to save the post. Please check the console for more details.');\r\n//       setError(err.response ? err.response.data.msg : 'Something went wrong'); // Сохраняем сообщение об ошибке в состоянии\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>{id ? 'Edit Post' : 'Create Post'}</h1>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <label>Title</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={title}\r\n//             onChange={(e) => setTitle(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <label>Content</label>\r\n//           <textarea\r\n//             value={content}\r\n//             onChange={(e) => setContent(e.target.value)}\r\n//             required\r\n//           ></textarea>\r\n//         </div>\r\n//         <button type=\"submit\">{id ? 'Update' : 'Create'}</button>\r\n//       </form>\r\n//       {error && <p style={{ color: 'red' }}>{error}</p>} {/* Отображение сообщения об ошибке */}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default PostForm;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { Box, Button, TextField, Typography, Alert } from '@mui/material';\r\n\r\nconst PostForm = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [error, setError] = useState('');\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      const fetchPost = async () => {\r\n        try {\r\n          const res = await axios.get(`http://localhost:5000/api/posts/${id}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n            },\r\n          });\r\n          setTitle(res.data.title);\r\n          setContent(res.data.content);\r\n        } catch (err) {\r\n          console.error('Error fetching post:', err);\r\n          setError(err.response ? err.response.data.msg : 'Something went wrong');\r\n        }\r\n      };\r\n\r\n      fetchPost();\r\n    }\r\n  }, [id]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const postData = { title, content };\r\n\r\n    try {\r\n      if (id) {\r\n        // Обновление поста\r\n        await axios.put(`http://localhost:5000/api/posts/${id}`, postData, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n      } else {\r\n        // Создание нового поста\r\n        await axios.post('http://localhost:5000/api/posts', postData, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n      }\r\n\r\n      navigate('/posts');\r\n    } catch (err) {\r\n      console.error('Error saving post:', err);\r\n      setError(err.response ? err.response.data.msg : 'Something went wrong');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 600, margin: 'auto', padding: 4 }}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        {id ? 'Edit Post' : 'Create Post'}\r\n      </Typography>\r\n      \r\n      {error && (\r\n        <Alert severity=\"error\" sx={{ marginBottom: 2 }}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n      \r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          label=\"Title\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          required\r\n          sx={{ marginBottom: 2 }}\r\n        />\r\n        <TextField\r\n          label=\"Content\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          multiline\r\n          rows={4}\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n          required\r\n          sx={{ marginBottom: 2 }}\r\n        />\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n          {id ? 'Update' : 'Create'}\r\n        </Button>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}