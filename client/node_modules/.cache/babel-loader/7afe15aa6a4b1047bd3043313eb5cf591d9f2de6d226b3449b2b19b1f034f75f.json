{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\San\\\\Desktop\\\\projects\\\\testTest \\u2014 \\u043A\\u043E\\u043F\\u0438\\u044F\\\\client\\\\src\\\\components\\\\EditTgk.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { TextField, Button, Box, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\nfunction EditTgk({\n  transactionId,\n  onUpdate\n}) {\n  _s();\n  const [transaction, setTransaction] = useState(null);\n  const [error, setError] = useState('');\n  const [updatedTransaction, setUpdatedTransaction] = useState({});\n  useEffect(() => {\n    const fetchTransaction = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const config = {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        };\n        console.log(\"Fetching transaction with ID:\", transactionId); // Логирование ID\n        const response = await axios.get(`${API_URL}/api/tgk/${transactionId}`, config);\n        setTransaction(response.data);\n        setUpdatedTransaction(response.data); // Инициализируем данные для редактирования\n      } catch (error) {\n        console.error('Ошибка при загрузке транзакции:', error);\n        setError('Ошибка при загрузке транзакции');\n      }\n    };\n    if (transactionId) {\n      fetchTransaction();\n    } else {\n      setError('ID транзакции отсутствует');\n    }\n  }, [transactionId]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUpdatedTransaction(prev => ({\n      ...prev,\n      [name]: value\n    })); // Обновляем данные для редактирования\n  };\n  const handleSubmit = async e => {\n    e.preventDefault(); // Предотвращаем перезагрузку страницы\n    try {\n      const token = localStorage.getItem('token');\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      await axios.put(`${API_URL}/api/tgk/${transactionId}`, updatedTransaction, config);\n      onUpdate(); // Обновляем родительский компонент\n    } catch (error) {\n      console.error('Ошибка при обновлении транзакции:', error);\n      setError('Ошибка при обновлении транзакции');\n    }\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 16\n    }, this);\n  }\n  if (!transaction) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: 400,\n      margin: '0 auto',\n      padding: 3,\n      boxShadow: 2,\n      borderRadius: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0442\\u0440\\u0430\\u043D\\u0437\\u0430\\u043A\\u0446\\u0438\\u044E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mb: 2,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"\\u0421\\u0443\\u043C\\u043C\\u0430 \\u0441\\u0447\\u0435\\u0442\\u0430\",\n          type: \"number\",\n          name: \"amountBilled\",\n          fullWidth: true,\n          value: updatedTransaction.amountBilled || '',\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mb: 2,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"\\u041E\\u043F\\u043B\\u0430\\u0447\\u0435\\u043D\\u043E\",\n          type: \"number\",\n          name: \"amountPaid\",\n          fullWidth: true,\n          value: updatedTransaction.amountPaid || '',\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_s(EditTgk, \"fmbZoGTDP90TNaw5XsCf/cjbh9Y=\");\n_c = EditTgk;\nexport default EditTgk;\nvar _c;\n$RefreshReg$(_c, \"EditTgk\");","map":{"version":3,"names":["React","useState","useEffect","axios","TextField","Button","Box","Typography","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","EditTgk","transactionId","onUpdate","_s","transaction","setTransaction","error","setError","updatedTransaction","setUpdatedTransaction","fetchTransaction","token","localStorage","getItem","config","headers","Authorization","console","log","response","get","data","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","put","color","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","maxWidth","margin","padding","boxShadow","borderRadius","variant","gutterBottom","onSubmit","mb","label","type","fullWidth","amountBilled","onChange","required","amountPaid","_c","$RefreshReg$"],"sources":["C:/Users/San/Desktop/projects/testTest — копия/client/src/components/EditTgk.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { TextField, Button, Box, Typography } from '@mui/material';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\r\n\r\nfunction EditTgk({ transactionId, onUpdate }) {\r\n    const [transaction, setTransaction] = useState(null);\r\n    const [error, setError] = useState('');\r\n    const [updatedTransaction, setUpdatedTransaction] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchTransaction = async () => {\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n\r\n                const config = {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                };\r\n\r\n                console.log(\"Fetching transaction with ID:\", transactionId); // Логирование ID\r\n                const response = await axios.get(`${API_URL}/api/tgk/${transactionId}`, config);\r\n                setTransaction(response.data);\r\n                setUpdatedTransaction(response.data); // Инициализируем данные для редактирования\r\n            } catch (error) {\r\n                console.error('Ошибка при загрузке транзакции:', error);\r\n                setError('Ошибка при загрузке транзакции');\r\n            }\r\n        };\r\n\r\n        if (transactionId) {\r\n            fetchTransaction();\r\n        } else {\r\n            setError('ID транзакции отсутствует');\r\n        }\r\n    }, [transactionId]);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setUpdatedTransaction((prev) => ({ ...prev, [name]: value })); // Обновляем данные для редактирования\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); // Предотвращаем перезагрузку страницы\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n\r\n            const config = {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            };\r\n\r\n            await axios.put(`${API_URL}/api/tgk/${transactionId}`, updatedTransaction, config);\r\n            onUpdate(); // Обновляем родительский компонент\r\n        } catch (error) {\r\n            console.error('Ошибка при обновлении транзакции:', error);\r\n            setError('Ошибка при обновлении транзакции');\r\n        }\r\n    };\r\n\r\n    if (error) {\r\n        return <Typography color=\"error\">{error}</Typography>;\r\n    }\r\n\r\n    if (!transaction) {\r\n        return <Typography>Загрузка...</Typography>;\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ maxWidth: 400, margin: '0 auto', padding: 3, boxShadow: 2, borderRadius: 2 }}>\r\n            <Typography variant=\"h5\" gutterBottom>Редактировать транзакцию</Typography>\r\n            <form onSubmit={handleSubmit}>\r\n                <Box mb={2}>\r\n                    <TextField\r\n                        label=\"Сумма счета\"\r\n                        type=\"number\"\r\n                        name=\"amountBilled\"\r\n                        fullWidth\r\n                        value={updatedTransaction.amountBilled || ''}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </Box>\r\n                <Box mb={2}>\r\n                    <TextField\r\n                        label=\"Оплачено\"\r\n                        type=\"number\"\r\n                        name=\"amountPaid\"\r\n                        fullWidth\r\n                        value={updatedTransaction.amountPaid || ''}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </Box>\r\n                {/* Добавьте другие поля формы по мере необходимости */}\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\" fullWidth>\r\n                    Сохранить изменения\r\n                </Button>\r\n            </form>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default EditTgk;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}