{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\San\\\\Desktop\\\\projects\\\\test\\\\client\\\\src\\\\components\\\\PostList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/posts');\n        setPosts(res.data);\n      } catch (err) {\n        console.error('Error fetching posts:', err);\n        setError(err.response ? err.response.data.msg : 'Something went wrong'); // Сохраняем сообщение об ошибке в состоянии\n      }\n    };\n    fetchPosts();\n  }, []);\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/api/posts/${id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setPosts(posts.filter(post => post._id !== id));\n    } catch (err) {\n      console.error('Error deleting post:', err);\n      setError(err.response ? err.response.data.msg : 'Something went wrong'); // Сохраняем сообщение об ошибке в состоянии\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/create\",\n      children: \"Create New Post!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/edit/${post._id}`,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(post._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"q/y3GZQxjsT86oPUbeQR6Qlz1Qg=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","jsxDEV","_jsxDEV","PostList","_s","posts","setPosts","error","setError","fetchPosts","res","get","data","err","console","response","msg","handleDelete","id","delete","headers","Authorization","localStorage","getItem","filter","post","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","to","map","title","content","onClick","_c","$RefreshReg$"],"sources":["C:/Users/San/Desktop/projects/test/client/src/components/PostList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PostList = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [error, setError] = useState('');\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:5000/api/posts');\r\n        setPosts(res.data);\r\n      } catch (err) {\r\n        console.error('Error fetching posts:', err);\r\n        setError(err.response ? err.response.data.msg : 'Something went wrong'); // Сохраняем сообщение об ошибке в состоянии\r\n\r\n      }\r\n    };\r\n\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/posts/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      setPosts(posts.filter((post) => post._id !== id));\r\n    } catch (err) {\r\n      console.error('Error deleting post:', err);\r\n      setError(err.response ? err.response.data.msg : 'Something went wrong'); // Сохраняем сообщение об ошибке в состоянии\r\n\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Posts</h1>\r\n      <Link to=\"/create\">Create New Post!!!</Link>\r\n      <ul>\r\n        {posts.map((post) => (\r\n          <li key={post._id}>\r\n            <h2>{post.title}</h2>\r\n            <p>{post.content}</p>\r\n            <Link to={`/edit/${post._id}`}>Edit</Link>\r\n            <button onClick={() => handleDelete(post._id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default PostList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}