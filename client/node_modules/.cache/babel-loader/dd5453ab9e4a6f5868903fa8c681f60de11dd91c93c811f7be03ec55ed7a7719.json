{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\San\\\\Desktop\\\\projects\\\\testTest \\u2014 \\u043A\\u043E\\u043F\\u0438\\u044F\\\\client\\\\src\\\\components\\\\TransactionList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TransactionItem from './TransactionItem';\nimport EditTransaction from './EditTransaction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionList = () => {\n  _s();\n  var _totalAmountBilled$;\n  const [transactions, setTransactions] = useState([]);\n  const [totalAmountBilled, setTotalAmountBilled] = useState(0); // Для хранения общей суммы начисленных средств\n  const [totalPaid, setTotalPaid] = useState([]); // Для хранения общей суммы оплаченных средств\n  const [editingTransactionId, setEditingTransactionId] = useState(null);\n  const [error, setError] = useState('');\n\n  // Функция для получения списка транзакций\n  const fetchTransactions = async () => {\n    try {\n      var _res$data$totalAmount;\n      const res = await axios.get('http://localhost:5000/api/transactions', {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n\n      // Устанавливаем транзакции и другие данные в состояние\n      setTransactions(res.data.transactions); // Устанавливаем список транзакций\n      setTotalAmountBilled(((_res$data$totalAmount = res.data.totalAmountBilled[0]) === null || _res$data$totalAmount === void 0 ? void 0 : _res$data$totalAmount.total) || 0); // Устанавливаем общую сумму начисленных средств\n      setTotalPaid(res.data.totalPaid); // Устанавливаем данные об оплатах\n    } catch (err) {\n      setError(err.response ? err.response.data.msg : 'Something went wrong');\n    }\n  };\n  useEffect(() => {\n    fetchTransactions(); // Вызываем получение транзакций при загрузке компонента\n  }, []);\n\n  // Обработчик удаления транзакции\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/api/transaction/${id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n\n      // Удаляем транзакцию из состояния после успешного удаления\n      setTransactions(transactions.filter(transaction => transaction._id !== id));\n      alert('Транзакция успешно удалена');\n    } catch (error) {\n      console.error('Ошибка при удалении транзакции:', error);\n      setError('Ошибка при удалении транзакции');\n    }\n  };\n  const handleEditClick = id => {\n    setEditingTransactionId(id); // Устанавливаем ID для редактирования\n  };\n\n  // Функция для обновления транзакций после редактирования\n  const handleUpdate = async () => {\n    await fetchTransactions(); // Обновляем список транзакций после изменения\n    setEditingTransactionId(null); // Сбрасываем редактируемую транзакцию\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0418\\u0441\\u0442\\u043E\\u0440\\u0438\\u044F \\u0442\\u0440\\u0430\\u043D\\u0437\\u0430\\u043A\\u0446\\u0438\\u0439\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041E\\u0431\\u0449\\u0430\\u044F \\u0441\\u0443\\u043C\\u043C\\u0430 \\u043D\\u0430\\u0447\\u0438\\u0441\\u043B\\u0435\\u043D\\u043D\\u044B\\u0445 \\u0441\\u0440\\u0435\\u0434\\u0441\\u0442\\u0432: \", (totalAmountBilled === null || totalAmountBilled === void 0 ? void 0 : (_totalAmountBilled$ = totalAmountBilled[0]) === null || _totalAmountBilled$ === void 0 ? void 0 : _totalAmountBilled$.total) || 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u041E\\u0431\\u0449\\u0430\\u044F \\u0441\\u0443\\u043C\\u043C\\u0430 \\u043E\\u043F\\u043B\\u0430\\u0447\\u0435\\u043D\\u043D\\u044B\\u0445 \\u0441\\u0440\\u0435\\u0434\\u0441\\u0442\\u0432:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: totalPaid.map((userPayment, index) => {\n          var _userPayment$_id;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C: \", (userPayment === null || userPayment === void 0 ? void 0 : (_userPayment$_id = userPayment._id) === null || _userPayment$_id === void 0 ? void 0 : _userPayment$_id.name) || \"Неизвестно\", \", \\u041E\\u043F\\u043B\\u0430\\u0447\\u0435\\u043D\\u043E: \", (userPayment === null || userPayment === void 0 ? void 0 : userPayment.total) || 0]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 7\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"ID \\u0442\\u0440\\u0430\\u043D\\u0437\\u0430\\u043A\\u0446\\u0438\\u0438: \", transaction._id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u043E \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u043C (id): \", transaction.user.username, transaction.user._id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u043E \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u043C (id): \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u041D\\u0430\\u0447\\u0438\\u0441\\u043B\\u0435\\u043D\\u043E: \", transaction.amountBilled]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u041E\\u043F\\u043B\\u0430\\u0447\\u0435\\u043D\\u043E: \", transaction.amountPaid]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u0421\\u0430\\u043B\\u044C\\u0434\\u043E: \", transaction.balance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u0414\\u043E\\u043B\\u0433: \", transaction.debt]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u0414\\u0430\\u0442\\u0430 \\u0438 \\u0412\\u0440\\u0435\\u043C\\u044F: \", new Date(transaction.date).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TransactionItem, {\n          transaction: transaction,\n          onDelete: () => handleDelete(transaction._id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditClick(transaction._id),\n          children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, transaction._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), editingTransactionId && /*#__PURE__*/_jsxDEV(EditTransaction, {\n      transactionId: editingTransactionId,\n      onUpdate: handleUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionList, \"EA9MSWjHfE1cYwmfOIsfeHZ2nNs=\");\n_c = TransactionList;\nexport default TransactionList;\nvar _c;\n$RefreshReg$(_c, \"TransactionList\");","map":{"version":3,"names":["React","useState","useEffect","axios","TransactionItem","EditTransaction","jsxDEV","_jsxDEV","TransactionList","_s","_totalAmountBilled$","transactions","setTransactions","totalAmountBilled","setTotalAmountBilled","totalPaid","setTotalPaid","editingTransactionId","setEditingTransactionId","error","setError","fetchTransactions","_res$data$totalAmount","res","get","headers","Authorization","localStorage","getItem","data","total","err","response","msg","handleDelete","id","delete","filter","transaction","_id","alert","console","handleEditClick","handleUpdate","children","fileName","_jsxFileName","lineNumber","columnNumber","map","userPayment","index","_userPayment$_id","name","user","username","amountBilled","amountPaid","balance","debt","Date","date","toLocaleString","onDelete","onClick","transactionId","onUpdate","style","color","_c","$RefreshReg$"],"sources":["C:/Users/San/Desktop/projects/testTest — копия/client/src/components/TransactionList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport TransactionItem from './TransactionItem';\r\nimport EditTransaction from './EditTransaction';\r\n\r\nconst TransactionList = () => {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [totalAmountBilled, setTotalAmountBilled] = useState(0);  // Для хранения общей суммы начисленных средств\r\n  const [totalPaid, setTotalPaid] = useState([]);  // Для хранения общей суммы оплаченных средств\r\n  const [editingTransactionId, setEditingTransactionId] = useState(null);\r\n  const [error, setError] = useState('');\r\n\r\n  // Функция для получения списка транзакций\r\n  const fetchTransactions = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:5000/api/transactions', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n\r\n      // Устанавливаем транзакции и другие данные в состояние\r\n      setTransactions(res.data.transactions);  // Устанавливаем список транзакций\r\n      setTotalAmountBilled(res.data.totalAmountBilled[0]?.total || 0);  // Устанавливаем общую сумму начисленных средств\r\n      setTotalPaid(res.data.totalPaid);  // Устанавливаем данные об оплатах\r\n\r\n    } catch (err) {\r\n      setError(err.response ? err.response.data.msg : 'Something went wrong');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTransactions(); // Вызываем получение транзакций при загрузке компонента\r\n  }, []);\r\n\r\n  // Обработчик удаления транзакции\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/transaction/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      \r\n      // Удаляем транзакцию из состояния после успешного удаления\r\n      setTransactions(transactions.filter(transaction => transaction._id !== id));\r\n      alert('Транзакция успешно удалена');\r\n    } catch (error) {\r\n      console.error('Ошибка при удалении транзакции:', error);\r\n      setError('Ошибка при удалении транзакции');\r\n    }\r\n  };\r\n\r\n  const handleEditClick = (id) => {\r\n    setEditingTransactionId(id); // Устанавливаем ID для редактирования\r\n  };\r\n\r\n  // Функция для обновления транзакций после редактирования\r\n  const handleUpdate = async () => {\r\n    await fetchTransactions(); // Обновляем список транзакций после изменения\r\n    setEditingTransactionId(null); // Сбрасываем редактируемую транзакцию\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>История транзакций</h1>\r\n      \r\n      {/* Отображение общей суммы начисленных и оплаченных средств */}\r\n      <div>\r\n  <p>Общая сумма начисленных средств: {totalAmountBilled?.[0]?.total || 0}</p>\r\n  <p>Общая сумма оплаченных средств:</p>\r\n  <ul>\r\n    {totalPaid.map((userPayment, index) => (\r\n      <li key={index}>\r\n        {/* Убедитесь, что отображаете конкретное поле, например, userPayment._id.name */}\r\n        Пользователь: {userPayment?._id?.name || \"Неизвестно\"}, Оплачено: {userPayment?.total || 0}\r\n      </li>\r\n    ))}\r\n  </ul>\r\n</div>\r\n      <hr />\r\n\r\n      <ul>\r\n        {transactions.map((transaction) => (\r\n          <li key={transaction._id}>\r\n            <p>ID транзакции: {transaction._id}</p>\r\n            <p>Добавлено пользователем (id): {transaction.user.username}{transaction.user._id}</p>\r\n            <p>Добавлено пользователем (id): </p>\r\n            <p>Начислено: {transaction.amountBilled}</p>\r\n            <p>Оплачено: {transaction.amountPaid}</p>\r\n            <p>Сальдо: {transaction.balance}</p>\r\n            <p>Долг: {transaction.debt}</p>\r\n            <p>Дата и Время: {new Date(transaction.date).toLocaleString()}</p>            \r\n            {/* Компонент для удаления транзакции */}\r\n            <TransactionItem transaction={transaction} onDelete={() => handleDelete(transaction._id)} />\r\n\r\n            {/* Кнопка редактирования */}\r\n            <button onClick={() => handleEditClick(transaction._id)}>Редактировать</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {/* Условное отображение формы редактирования */}\r\n      {editingTransactionId && (\r\n        <EditTransaction transactionId={editingTransactionId} onUpdate={handleUpdate} />\r\n      )}\r\n\r\n      {/* Вывод ошибок */}\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}